update.packages(checkBuilt=TRUE, ask=FALSE)
find.package("devtools")
install.packages("devtools")
library(devtools)
library(datasets)
data(iris)
?iris
iris
View(iris)
View(iris)
save.image("~/R/work dir/test.RData")
View(iris)
write.csv(iris,"iris.csv")
iris
mean(iris)
mean(iris$Sepal.Length)
virginica <- iris[species = "virginica",]
virginica <- iris[iris$species = "virginica",]
virginica <- iris[iris$species == "virginica",]
virginica
v <- subset(iris,Species = "virginica")
v
v <- subset(iris,Species == "virginica")
v
mean(Sepal,Length)
mean(v$Sepal,Length)
mean(v$Sepal.Length)
v <- subset(iris,Species == "virginica")
mean(v$Sepal.Length)
colMeans(iris)
iris
iris
data(iris)
iris
lirbrary(datasets)
library(datasets)
iris
library(datasets)
iris
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
write,csv(mtcars,"mtcars.csv")
write.csv(mtcars,"mtcars.csv")
lapply(mtcars,mean)
apply(mtcars,2,mean)
sapply(mtcars,cyl,mean)
sapply(split(mtcar$mpg,mtcars$cyl),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
m <- sapply(split(mtcars$mpg,mtcars$cyl),mean)
m
m[1]-m[3]
debug(ls)
ls
h <- sapply(split(mtcars$hp,mtcars$cyl),mean)
h
h[1]-h[3]
version
source(cachematrix.r)
source(cachematrix.R)
source("cachematrix.R")
setwd("~/GitHub/ProgrammingAssignment2")
source("cachematrix.R")
setwd("~/GitHub/ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix(c(1, 3, 3, 1, 4, 3, 1, 3, 4), row = 3, ncol = 3)
m <- matrix(c(1, 3, 3, 1, 4, 3, 1, 3, 4), nrow = 3, ncol = 3)
m
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), row = 3, ncol = 3)
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
m
im <- cacheSolve(m)
setwd("~/GitHub/ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
m
im <- cacheSolve(m)
source("cachematrix.R")
source("cachematrix.R")
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
m
im <- cacheSolve(m)
source("cachematrix.R")
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
m
im <- cacheSolve(m)
View(m)
source("cachematrix.R")
im <- cacheSolve(m)
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
?m
??m
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
m
cacheSolve(m)
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
c = makeCacheMatrix(m)
c$get()
cacheSolve(c)
cacheSolve(c)
Browse[2]> m <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
Browse[2]> c = makeCacheMatrix(m)
Browse[2]> c$get()
[,1] [,2] [,3]
[1,]    1    3    3
[2,]    1    4    3
[3,]    1    3    4
Browse[2]> cacheSolve(c)
[,1] [,2] [,3]
[1,]    7   -3   -3
[2,]   -1    1    0
[3,]   -1    0    1
Browse[2]> cacheSolve(c)
getting cached data
[,1] [,2] [,3]
[1,]    7   -3   -3
[2,]   -1    1    0
[3,]   -1    0    1
source("cachematrix.R")
example <- matrix(c(1, 1, 1, 3, 4, 3, 3, 3, 4), nrow = 3, ncol = 3)
cache = makeCacheMatrix(example)
cache$get()
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
cacheSolve(cache)
